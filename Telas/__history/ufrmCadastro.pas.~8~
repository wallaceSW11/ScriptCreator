unit ufrmCadastro;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, uTextoPadraoDAO, uTextoPadrao,
  uCadastroHelper;

type
  TfrmCadastro = class(TForm)
    edtID: TEdit;
    edtDescricao: TEdit;
    edtCodigo: TEdit;
    mmTexto: TMemo;
    btnOK: TButton;
    btnCancelar: TButton;
    lblCodigo: TLabel;
    lblDescricao: TLabel;
    procedure btnOKClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
  private
    function RetornarIDTexto: Integer;
    { Private declarations }
  public
    { Public declarations }

  procedure MostrarTela(pObjeto: TTextoPadrao); overload;
  procedure MostrarTela(); overload;
  end;

var
  frmCadastro: TfrmCadastro;

implementation

{$R *.dfm}

{ TfrmCadastro }

procedure TfrmCadastro.btnCancelarClick(Sender: TObject);
begin
  close;
end;

procedure TfrmCadastro.btnOKClick(Sender: TObject);
var
  lTexto: TTextoPadrao;
begin
  lTexto := TTextoPadrao.Create;

  lTexto.ID := RetornarIDTexto;
  lTexto.Codigo := edtCodigo.Text;
  lTexto.Descricao := edtDescricao.Text;
  lTexto.Texto := mmTexto.Text;

  TTextoPadraoDAO.GravarTextoPadrao(lTexto);

  Close;
end;

function TfrmCadastro.RetornarIDTexto:Integer;
begin
  Result := 0;

  if edtID.Text = EmptyStr then
    Result := StrToInt(edtID.Text);
end;

procedure TfrmCadastro.MostrarTela(pObjeto: TTextoPadrao);
begin
  if pObjeto <> nil then
  begin
    edtID.Text := IntToStr(pObjeto.ID);
    edtCodigo.Text := pObjeto.Codigo;
    edtDescricao.Text := pObjeto.Descricao;
    mmTexto.Lines.Add(pObjeto.Texto);
  end;

  ShowModal;
end;

procedure TfrmCadastro.MostrarTela;
begin
  edtCodigo.Text := TCadastroHelper.NextCode('CdChamadaTexto');
  ShowModal;
end;

end.
