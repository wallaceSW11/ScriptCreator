unit uFactoryConnection;

interface

  uses
    System.SysUtils, System.Classes, Data.DB, Datasnap.DBClient,
  ZAbstractRODataset, ZAbstractDataset, ZDataset, ZAbstractConnection,
  ZConnection, ZDbcIntfs, StrUtils, uConexaoSingleton, uDadosServidor, uConfiguracao;

type
  TFactoryConnection = class
    class function Conectar():TZConnection;
  end;

implementation

uses
  Vcl.Forms;


class function TFactoryConnection.Conectar;
var
  lConexao : TZConnection;
  lConfig: TConfiguracao;
begin
  lConfig := TConfiguracao.Create;

  lConexao := TZConnection.Create(nil);
  lConexao.HostName := lConfig.Servidor;
  lConexao.Database := lConfig.Banco;
  lConexao.Protocol := lConfig.Protocolo;
  lConexao.Port := lConfig.Porta.ToInteger;
  lConexao.User := lConfig.Usuario;
  lConexao.Password := lConfig.Senha;
  lConexao.LoginPrompt := False;
  lConexao.TransactIsolationLevel := tiReadCommitted;
  result := lConexao;
end;


//  class function TFactoryConnection.Conectar;
//var
//  lConexao : TZConnection;
//begin
//  lConexao := TZConnection.Create(nil);
//  lConexao.HostName := TDadosServidor.DadosAcesso('Servidor');
//  lConexao.Database := TDadosServidor.DadosAcesso('Banco');
//  lConexao.Protocol := TDadosServidor.DadosAcesso('Protocolo');
//  lConexao.Port := StrToInt(TDadosServidor.DadosAcesso('Porta'));
//  lConexao.User := TDadosServidor.DadosAcesso('Usuario');
//  lConexao.Password := TDadosServidor.DadosAcesso('Senha');
//  lConexao.LoginPrompt := False;
//  lConexao.TransactIsolationLevel := tiReadCommitted;
//  result := lConexao;
//end;
end.

